Index: components/searchBar.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import styles from \"@/styles/search.module.css\";\r\nimport {useState} from \"react\";\r\nimport Mods from \"@/components/mods\";\r\nimport Results from \"./results\";\r\n\r\nconst modOptions = {\r\n  'r/': {\r\n    className: styles.redditMod,\r\n    name: 'reddit',\r\n    placeholder: 'Search for a subreddit',\r\n    bubble: 'r/',\r\n    encode: false,\r\n    launch: 'https://reddit.com/r/USER_QUERY'\r\n  },\r\n  'am/': {\r\n    className: styles.appleMusicMod,\r\n    name: 'appleMusic',\r\n    placeholder: 'Search for a song, artist, or album',\r\n    bubble: 'Apple Music',\r\n    encode: true,\r\n    launch: 'https://music.apple.com/us/search?term=USER_QUERY'\r\n  },\r\n  'sp/': {\r\n    className: styles.spotifyMod,\r\n    name: 'spotify',\r\n    placeholder: 'Search for a song, artist, or album',\r\n    bubble: 'Spotify',\r\n    encode: true,\r\n    launch: 'https://open.spotify.com/search/USER_QUERY'\r\n  },\r\n  'fand/': {\r\n    className: styles.fandomMod,\r\n    name: 'fandom',\r\n    placeholder: 'Search for a wiki page',\r\n    bubble: 'Fandom',\r\n    encode: true,\r\n    launch: 'https://community.fandom.com/wiki/Special:Search?query=USER_QUERY&scope=cross-wiki'\r\n  },\r\n  'yt/': {\r\n    className: styles.youtubeMod,\r\n    name: 'youtube',\r\n    placeholder: 'Search for a video',\r\n    bubble: 'YouTube',\r\n    encode: true,\r\n    launch: 'https://www.youtube.com/results?search_query=USER_QUERY'\r\n  },\r\n  'gh/': {\r\n    className: styles.githubMod,\r\n    name: 'github',\r\n    placeholder: 'Enter a user or user/repo',\r\n    bubble: 'Github',\r\n    encode: false,\r\n    launch: 'https://github.com/USER_QUERY'\r\n  },\r\n  'ghs/': {\r\n      className: styles.githubMod,\r\n      name: 'github search',\r\n      placeholder: 'Search Github',\r\n      bubble: 'Github Search',\r\n      encode: true,\r\n      launch: 'https://github.com/search?q=USER_QUERY&type=repositories'\r\n  },\r\n  'g/': {\r\n    className: styles.googleMod,\r\n    name: 'google',\r\n    placeholder: 'Search for anything',\r\n    bubble: 'Google',\r\n    encode: true,\r\n    launch: 'https://www.google.com/search?q=USER_QUERY'\r\n  },\r\n  'az/': {\r\n      className: styles.amazonMod,\r\n      name: 'amazon',\r\n      placeholder: 'Search for a product',\r\n      bubble: 'Amazon',\r\n      encode: true,\r\n      launch: 'https://www.amazon.com/s?k=USER_QUERY'\r\n  },\r\n  '//': {\r\n    className: styles.urlMod,\r\n    name: 'url',\r\n    placeholder: 'Enter a URL',\r\n    bubble: 'https://',\r\n    encode: true,\r\n    launch: 'https://USER_QUERY'\r\n  }\r\n}\r\n\r\nexport default function SearchBar() {\r\n  const [query, setQuery] = useState('')\r\n  const [mod, setMod] = useState('')\r\n  const [selectedResult, setSelectedResult] = useState(-1)\r\n  const [placeholder, setPlaceholder] = useState('Prepare for blastoff!')\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newQuery = e.target.query.value;\r\n    if (mod) {\r\n      window.open(mod.launch.replace('USER_QUERY', mod.encode ? encodeURIComponent(newQuery) : newQuery), '_self');\r\n    } else {\r\n      try {\r\n        new URL(newQuery);\r\n        window.open(newQuery, '_self');\r\n      } catch (error) {\r\n        window.open(`https://www.google.com/search?q=${encodeURIComponent(newQuery)}`, '_self');\r\n      }\r\n    }\r\n    e.target.reset();\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const newQuery = e.target.value\r\n\r\n    if (Object.keys(modOptions).includes(newQuery)) {\r\n      setMod(modOptions[newQuery])\r\n      setQuery('')\r\n      e.target.value = ''\r\n      setPlaceholder(modOptions[newQuery].placeholder)\r\n    } else {\r\n      setQuery(newQuery)\r\n    }\r\n  }\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (query.length === 0 && e.key === 'Backspace') {\r\n      setMod('')\r\n      setPlaceholder('Prepare for blastoff!')\r\n    } else if ( e.key === 'Enter') {\r\n      setMod('')\r\n      setPlaceholder('Prepare for blastoff!')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.searchContainer}>\r\n      <div className={styles.search}>\r\n        <Mods mod={mod}/>\r\n        <form onSubmit={handleSubmit} className={styles.searchForm} onChange={handleChange} onKeyDown={handleKeyPress}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder={placeholder}\r\n            id=\"query\"\r\n            name=\"query\"\r\n            autoComplete=\"off\"\r\n            className={styles.searchInput}\r\n          />\r\n          <button type='submit' className={styles.searchSubmit}>\r\n            <img src='/favicon.svg' alt='Blastoff!' height=\"60%\"/>\r\n          </button>\r\n        </form>\r\n      </div>\r\n      <Results mod={mod} query={query}/>\r\n    </div>\r\n  );\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/components/searchBar.js b/components/searchBar.js
--- a/components/searchBar.js	(revision 98579f13cf15f65cf516eb9ee3909f024339aaf3)
+++ b/components/searchBar.js	(date 1725169910365)
@@ -125,9 +125,12 @@
     if (query.length === 0 && e.key === 'Backspace') {
       setMod('')
       setPlaceholder('Prepare for blastoff!')
-    } else if ( e.key === 'Enter') {
-      setMod('')
-      setPlaceholder('Prepare for blastoff!')
+    } else if (e.key === 'ArrowUp') {
+      e.preventDefault()
+      setSelectedResult(selectedResult - 1)
+    } else if (e.key === 'ArrowDown') {
+      e.preventDefault()
+      setSelectedResult(selectedResult + 1)
     }
   }
 
@@ -149,7 +152,7 @@
           </button>
         </form>
       </div>
-      <Results mod={mod} query={query}/>
+      <Results mod={mod} query={query} selected={selectedResult}/>
     </div>
   );
 }
\ No newline at end of file
